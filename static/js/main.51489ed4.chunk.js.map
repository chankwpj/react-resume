{"version":3,"sources":["compoent/Loader.js","compoent/ErrorPage.js","compoent/Header.js","compoent/Experience.js","compoent/Experiences.js","compoent/Skills.js","compoent/Award.js","compoent/Education.js","compoent/Awards.js","compoent/Resume.js","App.js","serviceWorker.js","index.js"],"names":["Loader","className","Component","ErrorPage","HeaderBlock","contact","this","props","personName","email","linkedIn","location","React","Experience","dateBlock","exp","item","from","length","to","companyName","jobTitle","team","descriptions","map","desc","index","key","techStacks","stack","Experiences","experienceItems","Skills","skillItems","skillItem","itemTitle","items","idx","Award","data","awardItem","description","undefined","name","Education","educationItem","degree","classification","university","Resume","resume","Header","App","state","fetch","then","res","json","catch","err","setState","error","Object","keys","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.51489ed4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../Loading.css';\r\n\r\nclass Loader extends Component {\r\n\r\n    render() {\r\n        return (<div className='loader-container'><div className='loader'></div></div>);\r\n    }\r\n\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport '../Error.css';\r\n\r\nclass ErrorPage extends Component {\r\n\r\n    render() {\r\n        return <p className='errorPage'>Something went wrong, please try again :(</p>;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorPage;","import React from 'react';\r\n\r\nclass HeaderBlock extends React.Component {\r\n    render() {\r\n        const contact = this.props.contact;\r\n        // console.log(contact);\r\n        return (\r\n            <div className=\"headerBlock\">\r\n                <div className=\"leftBlock\" >\r\n                    <h1>{this.props.personName}</h1>\r\n                </div>\r\n                <div className=\"contact rightBlock\">\r\n                    <div>{contact.email}</div>\r\n                    <div>{contact.linkedIn}</div>\r\n                    <div>{contact.location}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderBlock","import React from 'react';\r\n\r\nclass Experience extends React.Component {\r\n\r\n    render() {\r\n        // console.log(this.props.item);\r\n        const exp = this.props.item;\r\n        \r\n        let dateBlock;\r\n        if (exp.from.length === 0) {\r\n            dateBlock = '';\r\n        } else {\r\n            if (exp.to.length ===0) {\r\n                dateBlock = exp.from;\r\n            } else {\r\n                dateBlock = exp.from + ' - ' + exp.to;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='expItem'>\r\n                {exp.companyName.length !== 0 &&\r\n                    <h4>{exp.companyName} - {exp.jobTitle}</h4>\r\n                }\r\n                {exp.from.length !== 0 && \r\n                    <p>{dateBlock} &emsp;&emsp;&emsp;&emsp; {exp.location}</p>\r\n                }\r\n                <h4>{exp.team}</h4>\r\n                {exp.descriptions.map((desc, index) => {\r\n                    return <p key={index}>- {desc}</p>;\r\n                })}\r\n                {exp.techStacks.map((stack, index) => {\r\n                    return <p key={index}>{stack}</p>;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Experience","import React from 'react';\r\nimport Experience from './Experience'\r\n\r\nclass Experiences extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"section\">\r\n              <h2>EXPERIENCES</h2>\r\n                {this.props.experienceItems.map((item, index) => {\r\n                    return <Experience key={index} item={item}></Experience>;\r\n                })} \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Experiences","import React from 'react';\r\n\r\nclass Skills extends React.Component {\r\n    render() {\r\n        const skillItems = this.props.skillItems;\r\n        return (\r\n            <div className=\"section\">\r\n                <h2>SKILLS</h2>\r\n                {\r\n                    skillItems.map((skillItem, index) => {\r\n                        return (\r\n                            <div className=\"skillItem\">\r\n                                <p key={index + \"t\"}>{skillItem.itemTitle}</p>\r\n                                {skillItem.items.map((item, idx) => { \r\n                                    return <p key={index + idx + \"d\"}>{item}</p>\r\n                                })}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Skills","import React from 'react';\r\n\r\nclass Award extends React.Component {\r\n    render() {\r\n        const data = this.props.awardItem;\r\n        // console.log(data);\r\n        const description = (data.description !== undefined) ? <p>- {data.description}</p> : '';\r\n        return (\r\n            <div className='award'>\r\n                <p>{data.name}</p>\r\n                {description}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Award","import React from 'react';\r\n\r\nclass Education extends React.Component {\r\n\r\n    render() {\r\n        const data = this.props.educationItem;\r\n        return (\r\n            <div className=\"section\">\r\n                <h2>EDUCATION</h2>\r\n                <p>{data.degree} &emsp; ({data.classification})</p>\r\n                <p>{data.university} &emsp;&emsp; {data.from} to {data.to}</p>\r\n                <p>{data.description}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Education","import React from 'react';\r\nimport Award from './Award';\r\n\r\nclass Awards extends React.Component {\r\n    render() {\r\n        const awardItems = this.props.awardItems;\r\n        // console.log(awardItems);\r\n\r\n        const award = [];\r\n        awardItems.forEach((awardItem, index) => {\r\n            award.push(<Award key={index} awardItem={awardItem} />);\r\n        });\r\n\r\n        return (\r\n            <div className=\"section flex-colum\">\r\n                <h2>AWARDS</h2>\r\n                {award}\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Awards","import React, { Component } from 'react';\r\nimport HeaderBlock from './Header'\r\nimport Experiences from './Experiences'\r\nimport Skills from './Skills';\r\nimport Awards from './Awards';\r\nimport Education from './Education';\r\n\r\nclass Resume extends Component {\r\n\r\n    render() {\r\n        const data = this.props.resume;\r\n        return (\r\n            //TODO: migrate this to ContextProvider\r\n            <div className=\"paper shadow-drop-center\">\r\n                <HeaderBlock personName={data.name} contact={data.contact} />\r\n                <div className='mainBlock'>\r\n                    <div className=\"flex-colum leftBlock\">\r\n                        <Experiences experienceItems={data.experienceItems} />\r\n                    </div>\r\n                    <div className=\"flex-colum rightBlock\">\r\n                        <Skills skillItems={data.skillItems} />\r\n                        <Education educationItem={data.educationItem} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Resume; ","import React, { Component } from 'react';\r\nimport Loader from './compoent/Loader';\r\nimport ErrorPage from './compoent/ErrorPage';\r\nimport Resume from './compoent/Resume';\r\nimport './App.css';\r\nimport './Print.css';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n      fetch('https://plain-resume-api.azurewebsites.net/resume/release')\r\n        .then(res => res.json())\r\n        .catch((err) => {\r\n          this.setState({ error: err });\r\n        })\r\n        .then((data) => {\r\n          this.setState({ resume: data });\r\n        })\r\n        .catch((err) => {\r\n          this.setState({ error: err });\r\n        });\r\n  }\r\n\r\n  render() {\r\n    if (Object.keys(this.state).length === 0) {\r\n      return <Loader />;\r\n    }\r\n\r\n    if (this.state.error !== undefined) {\r\n      return <ErrorPage />;\r\n    }\r\n\r\n    return <Resume resume={this.state.resume} />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}